{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";function ProtectedRoute(_ref){let{isAuthenticated,roles=[],userRoles=[],children}=_ref;console.log('User Roles:',userRoles);// Debug log\nconsole.log('Required Roles:',roles);// Debug log\nconsole.log('Is Authenticated:',isAuthenticated);const hasAccess=roles.every(role=>userRoles.includes(role));// Validate roles\nif(isAuthenticated){return hasAccess?children:/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\"});}return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\"});}export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","jsx","_jsx","ProtectedRoute","_ref","isAuthenticated","roles","userRoles","children","console","log","hasAccess","every","role","includes","to"],"sources":["C:/aramex - Copy/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ isAuthenticated, roles = [], userRoles = [], children }) {\r\n  console.log('User Roles:', userRoles); // Debug log\r\n  console.log('Required Roles:', roles); // Debug log\r\n  console.log('Is Authenticated:', isAuthenticated);\r\n\r\n  const hasAccess = roles.every((role) => userRoles.includes(role)); // Validate roles\r\n\r\n  if (isAuthenticated) {\r\n    return hasAccess ? children : <Navigate to=\"/unauthorized\" />;\r\n  }\r\n\r\n  return <Navigate to=\"/unauthorized\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAA4D,IAA3D,CAAEC,eAAe,CAAEC,KAAK,CAAG,EAAE,CAAEC,SAAS,CAAG,EAAE,CAAEC,QAAS,CAAC,CAAAJ,IAAA,CAC/EK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEH,SAAS,CAAC,CAAE;AACvCE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEJ,KAAK,CAAC,CAAE;AACvCG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEL,eAAe,CAAC,CAEjD,KAAM,CAAAM,SAAS,CAAGL,KAAK,CAACM,KAAK,CAAEC,IAAI,EAAKN,SAAS,CAACO,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAE;AAEnE,GAAIR,eAAe,CAAE,CACnB,MAAO,CAAAM,SAAS,CAAGH,QAAQ,cAAGN,IAAA,CAACF,QAAQ,EAACe,EAAE,CAAC,eAAe,CAAE,CAAC,CAC/D,CAEA,mBAAOb,IAAA,CAACF,QAAQ,EAACe,EAAE,CAAC,eAAe,CAAE,CAAC,CACxC,CAEA,cAAe,CAAAZ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}