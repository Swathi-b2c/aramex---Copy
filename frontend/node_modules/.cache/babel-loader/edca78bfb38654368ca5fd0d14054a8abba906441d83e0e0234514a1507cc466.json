{"ast":null,"code":"import React,{useState}from'react';import'./ChatPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatPage=()=>{const[messages,setMessages]=useState([]);const[message,setMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const generateDynamicReply=userMessage=>{// Analyze the user's message and generate a reply dynamically\nif(userMessage.toLowerCase().includes('how are you')){return`I am fine, thank you! How can I assist you further?`;}else if(userMessage.toLowerCase().includes('hai')||userMessage.toLowerCase().includes('hello')){return`Hi there! How can I assist you today?`;}else if(userMessage.toLowerCase().includes('fine')){return`Great to hear! How can I help you further?`;}else if(userMessage.toLowerCase().includes('help')){return`Sure! Could you please elaborate on what you need help with?`;}else if(userMessage.toLowerCase().includes('bye')){return`Goodbye! Feel free to chat with me anytime.`;}else if(userMessage.toLowerCase().includes('play some music')){return`Sure! I can't play music directly, but I can recommend some playlists or you can listen to music on platforms like Spotify.`;}else if(userMessage.toLowerCase().includes('add a new contact')){return`To add a new contact, go to your contacts page and click on 'Add New Contact', then enter the contact details.`;}else if(userMessage.toLowerCase().includes('get a refund')){return`Refund requests can be made through our customer support page. Just fill out the form and we will assist you.`;}else if(userMessage.toLowerCase().includes('ceo of tesla')){return`The CEO of Tesla is Elon Musk.`;}else{// Default response for unknown input\nreturn`Hmm, that's interesting. Could you please explain more?`;}};const sendMessage=()=>{if(!message.trim())return;// Prevent empty messages\nconst userMessage=message.trim();// Add user's message\nsetMessages(prev=>[...prev,{sender:'You',content:userMessage}]);// Simulate Ziva's response with a delay\nsetIsLoading(true);setTimeout(()=>{const zivaReply=generateDynamicReply(userMessage);// Generate dynamic reply\nsetMessages(prev=>[...prev,{sender:'Ziva',content:zivaReply}]);setIsLoading(false);},1000);// 1 second delay\n// Clear the input field\nsetMessage('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chat with Ziva\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`chat-message ${msg.sender==='You'?'sent':'received'}`,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.sender,\": \"]}),\" \",msg.content]},index)),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Ziva is typing...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]});};export default ChatPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ChatPage","messages","setMessages","message","setMessage","isLoading","setIsLoading","generateDynamicReply","userMessage","toLowerCase","includes","sendMessage","trim","prev","sender","content","setTimeout","zivaReply","className","children","map","msg","index","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/aramex - Copy/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatPage.css';\r\n\r\nconst ChatPage = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const generateDynamicReply = (userMessage) => {\r\n    // Analyze the user's message and generate a reply dynamically\r\n    if (userMessage.toLowerCase().includes('how are you')) {\r\n      return `I am fine, thank you! How can I assist you further?`;\r\n    } else if (userMessage.toLowerCase().includes('hai') || userMessage.toLowerCase().includes('hello')) {\r\n      return `Hi there! How can I assist you today?`;\r\n    } else if (userMessage.toLowerCase().includes('fine')) {\r\n      return `Great to hear! How can I help you further?`;\r\n    } else if (userMessage.toLowerCase().includes('help')) {\r\n      return `Sure! Could you please elaborate on what you need help with?`;\r\n    } else if (userMessage.toLowerCase().includes('bye')) {\r\n      return `Goodbye! Feel free to chat with me anytime.`;\r\n    } else if (userMessage.toLowerCase().includes('play some music')) {\r\n      return `Sure! I can't play music directly, but I can recommend some playlists or you can listen to music on platforms like Spotify.`;\r\n    } else if (userMessage.toLowerCase().includes('add a new contact')) {\r\n      return `To add a new contact, go to your contacts page and click on 'Add New Contact', then enter the contact details.`;\r\n    } else if (userMessage.toLowerCase().includes('get a refund')) {\r\n      return `Refund requests can be made through our customer support page. Just fill out the form and we will assist you.`;\r\n    } else if (userMessage.toLowerCase().includes('ceo of tesla')) {\r\n      return `The CEO of Tesla is Elon Musk.`;\r\n    } else {\r\n      // Default response for unknown input\r\n      return `Hmm, that's interesting. Could you please explain more?`;\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!message.trim()) return; // Prevent empty messages\r\n\r\n    const userMessage = message.trim();\r\n\r\n    // Add user's message\r\n    setMessages((prev) => [...prev, { sender: 'You', content: userMessage }]);\r\n\r\n    // Simulate Ziva's response with a delay\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      const zivaReply = generateDynamicReply(userMessage); // Generate dynamic reply\r\n      setMessages((prev) => [...prev, { sender: 'Ziva', content: zivaReply }]);\r\n      setIsLoading(false);\r\n    }, 1000); // 1 second delay\r\n\r\n    // Clear the input field\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Chat with Ziva</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chat-message ${msg.sender === 'You' ? 'sent' : 'received'}`}\r\n          >\r\n            <strong>{msg.sender}: </strong> {msg.content}\r\n          </div>\r\n        ))}\r\n        {isLoading && <div className=\"loading\">Ziva is typing...</div>}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}